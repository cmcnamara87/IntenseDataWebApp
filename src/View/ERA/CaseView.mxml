<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" gap="0"
		 xmlns:Component="View.components.*" xmlns:components="View.ERA.components.*"
		 >

	<fx:Script>
		<![CDATA[
			import Controller.AppController;
			import Controller.ERA.CaseController;
			import Controller.IDEvent;
			import Controller.Utilities.AssetLookup;
			import Controller.Utilities.Auth;
			
			import Model.Model_ERACase;
			import Model.Model_ERALogItem;
			import Model.Model_ERAProject;
			import Model.Model_ERARoom;
			import Model.Model_ERAUser;
			
			import View.ERA.components.CaseListItem;
			import View.ERA.components.rooms.EvidenceBox;
			import View.ERA.components.rooms.EvidenceManagement;
			import View.ERA.components.rooms.Exhibition;
			import View.ERA.components.rooms.ForensicLab;
			import View.ERA.components.rooms.ScreeningLab;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.Text;
			import mx.core.UIComponent;
			import mx.graphics.SolidColor;
			
			import spark.components.Label;
			import spark.layouts.HorizontalAlign;
			import spark.layouts.VerticalAlign;
			
			private var aasdf:Array = new Array("helo", "world", "test", "this");
			private var arrayTest:ArrayList = new ArrayList(aasdf);
			
			private var evidenceManagement:EvidenceManagement = null; // The evidence management view
			private var evidenceBox:EvidenceBox = null; // the evidence box view
			private var forensicLab:ForensicLab = null; // the forensic lab view
			private var screeningLab:ScreeningLab = null; // the forensic lab view
			private var exhibition:Exhibition = null;
			
			/**
			 * Adds data to all the rooms for the  case
			 * @param roomDataArray	The Room data
			 */
			public function addRoomData(roomDataArray:Array):void {
				for each(var roomData:Model_ERARoom in roomDataArray) {
					switch(roomData.roomType) {
						case Model_ERARoom.EVIDENCE_MANAGEMENT:
							evidenceManagementButton.roomData = roomData;
							break;
						case Model_ERARoom.EVIDENCE_ROOM:
							evidenceBoxButton.roomData = roomData;
							break;
						case Model_ERARoom.FORENSIC_LAB:
							forensicLabButton.roomData = roomData;
							break;
						case Model_ERARoom.SCREENING_ROOM:
							screeningLabButton.roomData = roomData;
							break;
						case Model_ERARoom.EXHIBIT:
							exhibitionButton.roomData = roomData;
							break;
					}
				}
			}
			
			public function showEvidenceManagement(logItemArray:Array):void {
				showRoomsAsNotSelected();
				evidenceManagementButton.selected = true;
				
				if(!evidenceManagement) evidenceManagement = new EvidenceManagement();
				room.removeAllElements();
				room.addElement(evidenceManagement);
				evidenceManagement.addLogItems(logItemArray);
			}
			
			private function showRoomsAsNotSelected():void {
				evidenceManagementButton.selected = false;
				evidenceBoxButton.selected = false;
				forensicLabButton.selected = false;
				screeningLabButton.selected = false;
				exhibitionButton.selected = false
//				for(var i:Number = 0; i < roomButtons.numElements; i++) {
//					(roomButtons.getElementAt(i) as RoomIcon).selected = false;
//				}
			}
			public function showEvidenceBox(fileArray:Array):void {
				showRoomsAsNotSelected();
				evidenceBoxButton.selected = true;
				
				if(!evidenceBox) evidenceBox = new EvidenceBox();
				room.removeAllElements();
				room.addElement(evidenceBox);
				evidenceBox.addFiles(fileArray);
				
			}
			public function showForensicLab(fileArray:Array):void {
				showRoomsAsNotSelected();
				forensicLabButton.selected = true;
				
				if(!forensicLab) forensicLab = new ForensicLab();
				
				room.removeAllElements();
				room.addElement(forensicLab);
				forensicLab.addFiles(fileArray);
			}
			public function showScreeningLab(fileArray:Array):void {
				showRoomsAsNotSelected();
				screeningLabButton.selected = true;
				
				if(!screeningLab) screeningLab = new ScreeningLab();
				
				room.removeAllElements();
				room.addElement(screeningLab);
				screeningLab.addFiles(fileArray);
			}
			public function showExhibition(fileArray:Array):void {
				showRoomsAsNotSelected();
				exhibitionButton.selected = true;
				
				if(!exhibition) exhibition = new Exhibition();
				
				room.removeAllElements();
				room.addElement(exhibition);
				exhibition.addFiles(fileArray);
			}
			public function addForensicLabConversation(conversationArray:Array):void {
				forensicLab.addConversation(conversationArray);
			}
			public function addScreeningLabConversation(conversationArray:Array):void {
				screeningLab.addConversation(conversationArray);
			}
			
			public function deleteEvidenceItem(logItemDeleted:Model_ERALogItem):void {
				evidenceManagement.deleteEvidenceItem(logItemDeleted);
			}
			
			public function showAccessDenied(text:String):void {
				room.removeAllElements();
				var message:Label = new Label();
				message.text = text;
				message.horizontalCenter = 0;
				message.verticalCenter = 0;
				room.addElement(message);
			}
			
			public function showNoCases():void {
				var label2:Label = new Label();
				label2.text = "No cases found";
				label2.horizontalCenter = 0;
				label2.setStyle('color', '0xFFFFFF');
				casePanelContent.removeAllElements();
				casePanelContent.addElement(label2);
				
				room.removeAllElements();
				
				var label3:Label = new Label();
				label3.text = "No cases found";
				label3.horizontalCenter = 0;
				label3.verticalCenter = 0;
				label3.setStyle("fontSize", "16");
				room.addElement(label3);
				
				if(caseNav.height != 0) {
					// Hide the case nav cause we dont have any cases
					caseNav.height = 0;
				}
				
				showERAInDropdown();
				
			}
			private function showERAInDropdown():void {
				// Now add all the ERAs to the dropdown (probably dont need this here, maybe another function???)
				var eraNameArray:ArrayCollection = new ArrayCollection();
				
				// The position of the era project that is set as the current era project
				var selectedIndex:Number = 0;
				
				for(var i:Number = 0; i < AppController.eraProjectArray.length; i++) {
					var eraProject:Model_ERAProject = AppController.eraProjectArray[i] as Model_ERAProject;
					
					// Add the era project to the dropdown
					var object:Object = new Object();
					object.label = "ERA " + eraProject.year;
					object.data = eraProject;
					eraNameArray.addItem(object);
					
					// Check if the era project is the current project, if so, save its position
					if(AppController.currentEraProject.base_asset_id == eraProject.base_asset_id) {
						selectedIndex = i;
					}
				}
				caseERADropdown.dataProvider = eraNameArray;
				caseERADropdown.selectedIndex = selectedIndex;
			}
			
			/**
			 * Add cases to the view
			 * @param caseArray	Array of @see Model_ERACase
			 */
			public function addCases(caseArray:Array):void {
				
				// Add all the Cases
				casePanelContent.removeAllElements();

				for each(var eraCase:Model_ERACase in caseArray) {
					var caseListItem:CaseListItem = new CaseListItem();
					caseListItem.caseData = eraCase;
					casePanelContent.addElement(caseListItem);
				}
				
				caseNav.height = 140;
				
				showERAInDropdown();
			}

			protected function caseTag_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(casePanel.width == 300) {
					casePanel.width = 0;
				} else {
					casePanel.width = 300;
				}
			}


			protected function roomicon1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
			}



		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<!-- The Case Panel -->
	<s:BorderContainer  id="casePanel" backgroundColor="0x000000" borderVisible="false" height="100%" width="0" resizeEffect="Resize">
		<s:VGroup width="100%" height="100%">
			<s:VGroup width="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10">
				<s:Label color="0xFFFFFF" text="ERA Case List" fontSize="20" />
				<s:DropDownList id="caseERADropdown" chromeColor="0x222222" contentBackgroundColor="0x000000" color="0xFFFFFF" width="100%">
				</s:DropDownList>
			</s:VGroup>
			<s:Scroller width="100%" height="100%" chromeColor="0x222222">
				<s:VGroup id="casePanelContent" width="100%" gap="0">
					<s:Label color="0xFFFFFF">
						Loading...
					</s:Label>
				</s:VGroup>
			</s:Scroller>
		</s:VGroup>
	</s:BorderContainer>
	<!-- END OF CASE PANEL -->
	
	<s:VGroup height="100%" width="100%" gap="0">
		<!-- START THE CONTENT SECTION -->
		<s:BorderContainer backgroundColor="0xFFFFFF" borderVisible="false" height="100%" width="100%">
			<s:Group height="100%" width="100%">
				<!-- The Current Room -->
				<s:Group height="100%" width="100%" id="room">
					<s:Label fontSize="16" text="Loading..." horizontalCenter="0" verticalCenter="0" />
				</s:Group>
				<!-- End of the Current room -->
				
				<!-- THE ERA Cases floating tag -->
				<s:BorderContainer buttonMode="true" id="caseTag" click="caseTag_clickHandler(event)" backgroundColor="black" borderVisible="false" width="40" height="150" top="270">
					<mx:Image source="{AssetLookup.getERACaseClass()}" width="22" height="16" x="8" y="10"></mx:Image>
					<s:Label x="12" y="112" rotation="270" text="ERA Cases" color="white" fontSize="16"/>
					<mx:Image source="{AssetLookup.getERACaseClass()}" width="22" height="16" x="8" y="120"></mx:Image>
					<s:filters>
						<s:DropShadowFilter distance="3" angle="0" alpha="0.5" color="0x000000" blurX="20" blurY="20"/>
					</s:filters>
				</s:BorderContainer>
				<!-- The ERA cases floating tag -->
				
				<!--<s:BorderContainer backgroundColor="0x000000" alpha="0.3" width="100%" height="100%">
				</s:BorderContainer>-->
			</s:Group>
		</s:BorderContainer>
		<!-- END THE CONTENT SECTION -->
		
		<!-- START THE CASE NAV SECTION -->
		<s:BorderContainer id="caseNav" backgroundColor="0x565656" width="100%" height="140" borderVisible="false" resizeEffect="Resize">
			<s:VGroup horizontalAlign="center" height="100%" width="100%">
				<s:HGroup height="100%" verticalAlign="middle" gap="10" id="roomButtons">
					<components:RoomIcon roomName="Evidence Manager" id="evidenceManagementButton" roomType="{Model_ERARoom.EVIDENCE_MANAGEMENT}" icon="{AssetLookup.EvidenceManagerIcon}"/>
					<mx:Image source="{AssetLookup.getLeftArrowIconClass()}" width="46" height="34"></mx:Image>
					<components:RoomIcon roomName="Evidence Box" alpha="0.5" id="evidenceBoxButton"  roomType="{Model_ERARoom.EVIDENCE_ROOM}" icon="{AssetLookup.EvidenceBoxIcon}" />
					<mx:Image source="{AssetLookup.getLeftArrowIconClass()}" width="46" height="34"></mx:Image>
					<components:RoomIcon roomName="Forensic Lab" alpha="0.5" id="forensicLabButton"  roomType="{Model_ERARoom.FORENSIC_LAB}" icon="{AssetLookup.ForensicLabIcon}"  />
					<mx:Image source="{AssetLookup.getLeftRightArrowIconClass()}" width="46" height="72"></mx:Image>
					<components:RoomIcon roomName="Review Lab" alpha="0.5" id="screeningLabButton"  roomType="{Model_ERARoom.SCREENING_ROOM}" icon="{AssetLookup.ScreeningLabIcon}"  />
					<mx:Image source="{AssetLookup.getLeftArrowIconClass()}" width="46" height="34"></mx:Image>
					<components:RoomIcon roomName="Exhibition" alpha="0.5"  id="exhibitionButton"  unavailable="false" roomType="{Model_ERARoom.EXHIBIT}" icon="{AssetLookup.ExhibitionIcon}" />
					<mx:Image source="{AssetLookup.getLeftArrowIconClass() }"  width="46" height="34"></mx:Image>
					<components:RoomIcon roomName="Post Mortem" alpha="0.5" id="postMortemButton" unavailable="true" roomType="{Model_ERARoom.POST_MORTEM}" icon="{AssetLookup.PostMortemIcon}" />
				</s:HGroup>
			</s:VGroup>
		</s:BorderContainer>
		<!-- END THE CASE NAV SECTION-->
	</s:VGroup>
</s:HGroup>
