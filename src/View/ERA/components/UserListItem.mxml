<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
		 addedEffect="{fadeIn}"
		 backgroundColor="{canvasColor}"
		 mouseOver="canvas1_mouseOverHandler(event)"
		 mouseOut="canvas1_mouseOutHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:Fade duration="200" alphaFrom="0" alphaTo="1" id="fadeIn" />
		<s:Fade duration="100" alphaFrom="1" alphaTo="0" id="fadeOut" />
		
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import Controller.AppController;
			import Controller.IDEvent;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;

			[Bindable]
			private var canvasColor:uint = 0xFFFFFF;
			
			// Define public variables.
			[Bindable]
			public var username:String;
			
			[Bindable]
			public var firstName:String;
			
			[Bindable]
			public var lastName:String;

			[Bindable]
			public var deleteEventToThrow:String = ""; // the even to throw when the delete button is clicked
			
			[Bindable]
			protected var showEmail:Boolean = false;
			
			[Bindable]
			public var showEditable:Boolean = false;
			
			public var role:String = "";

			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				if(deleteEventToThrow == "") {
					return;
				}
				var deleteEvent:IDEvent = new IDEvent(deleteEventToThrow, true);
				// Save the username
				deleteEvent.data.username = username;
				
				dispatchEvent(deleteEvent);
			}


			protected function canvas1_mouseOverHandler(event:MouseEvent):void
			{
				canvasColor = 0xEEEEEE;
			}


			protected function canvas1_mouseOutHandler(event:MouseEvent):void
			{
				canvasColor = 0xFFFFFF;
			}

			protected function email_changeHandler(event:Event):void
			{
				throw new Error("Email handler called for non-UserRoleItem in UserListItem");
			}
			
			protected function editButton_clickHandler(event:MouseEvent):void
			{
				lastNameInput.text = lastName;
				firstNameInput.text = firstName;
				
				userInfo.visible = false;
				userInfo.includeInLayout = false;
				
				editInfo.visible = true;
				editInfo.includeInLayout = true;
				
				editButton.visible = false;
				editButton.includeInLayout = false;
				
				saveButton.visible = true;
				saveButton.includeInLayout = true;
				
				cancelButton.visible = true;
				cancelButton.includeInLayout = true;
				
				deleteButton.visible = false;
				deleteButton.includeInLayout = false;
			}
			
			protected function saveButton_clickHandler(event:MouseEvent):void
			{
				lastName = lastNameInput.text;
				firstName = firstNameInput.text;

				var update:IDEvent = new IDEvent(IDEvent.ERA_UPDATE_USER_INFO, true);
				update.data.lastName = lastName;
				update.data.firstName = firstName;
				update.data.username = username;
				dispatchEvent(update);
					
				
				userInfo.visible = true;
				userInfo.includeInLayout = true;
				
				editInfo.visible = false;
				editInfo.includeInLayout = false;
				
				editButton.visible = true;
				editButton.includeInLayout = true;
				
				saveButton.visible = false;
				saveButton.includeInLayout = false;
				
				cancelButton.visible = false;
				cancelButton.includeInLayout = false;
				
				deleteButton.visible = true;
				deleteButton.includeInLayout = true;
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				userInfo.visible = true;
				userInfo.includeInLayout = true;
				
				editInfo.visible = false;
				editInfo.includeInLayout = false;
				
				editButton.visible = true;
				editButton.includeInLayout = true;
				
				saveButton.visible = false;
				saveButton.includeInLayout = false;
				
				cancelButton.visible = false;
				cancelButton.includeInLayout = false;
				
				deleteButton.visible = true;
				deleteButton.includeInLayout = true;
			}
			
		]]>
	</fx:Script>
	<s:HGroup width="100%" verticalAlign="middle">
		<mx:Text id="userInfo" width="100%" text="{lastName}, {firstName} ({username})" />
		<s:HGroup width="100%" id="editInfo" visible="false" includeInLayout="false" >
			<s:TextInput id="lastNameInput" text="{lastName}" />
			<s:TextInput id="firstNameInput" text="{firstName}" />	
		</s:HGroup>
		<s:Button label="Edit" height="20" id="editButton" click="editButton_clickHandler(event)" visible="{showEditable}" includeInLayout="{showEditable}"/>
		<s:Button label="Save" height="20" id="saveButton" click="saveButton_clickHandler(event)" visible="false" includeInLayout="false" />
		<s:Button label="Cancel" height="20" id="cancelButton" click="cancelButton_clickHandler(event)" visible="false" includeInLayout="false" />
		
		<s:Button label="Remove" height="20" id="deleteButton" click="deleteButton_clickHandler(event)" width="85" >
		</s:Button>
		<mx:CheckBox id="email" labelPlacement="right" label="Enable Email" change="email_changeHandler(event)" visible="{showEmail}" includeInLayout="{showEmail}"/>
	</s:HGroup>
</mx:Canvas>
